# ============================================================================
# + File name:          tmux.conf
# + Description:        Tmux startup settings
# + Author:             leaf
# ============================================================================

# """""""""""""""""""""""""""""""""""""""""""""""""""
# => General Options
# """""""""""""""""""""""""""""""""""""""""""""""""""
  set -g  prefix 'C-o'
  if-shell 'test -e /usr/bin/fish' \
    'set -g  default-shell /usr/bin/fish'
  if-shell 'test -e /usr/local/bin/fish' \
    'set -g  default-shell /usr/local/bin/fish'
  set -g  mouse on
  set -g  history-limit 10000
  set -g  base-index 1
  set -g  pane-base-index 1
  set -g  renumber-windows on
  set -g  allow-rename off
  set -sg escape-time 0

  # vim tmux
    is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

    is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

  # other folks
    set-option prefix2 C-b

# """""""""""""""""""""""""""""""""""""""""""""""""""
# => Keybinds
# """""""""""""""""""""""""""""""""""""""""""""""""""
  # prefix
    bind c new-window      -c "#{pane_current_path}"
    bind h split-window -v -c "#{pane_current_path}"
    bind v split-window -h -c "#{pane_current_path}"

    bind K confirm-before -p "kill-window #W? (y\n)" kill-window
    bind P confirm-before -p "kill-pane #P? (y\n)" kill-pane
    bind r source-file ~/.tmux.conf

  # efficiency
    bind -n C-s new-window "ta"
    bind -n M-s new-window "fish"
    bind -n M-z resize-pane -Z
    bind -n M-m set mouse
    bind -n C-g copy-mode
    bind -n M-l send-keys C-l

    bind -n M-Up    resize-pane -U 5
    bind -n M-Down  resize-pane -D 5
    bind -n M-Left  resize-pane -L 5
    bind -n M-Right resize-pane -R 5

    bind -n F4 last-pane \; send-keys Up Enter \; last-pane

  # mouse
    bind m set mouse
    bind -T root MouseDown1Pane select-pane -t=\; send-keys -M # default
    bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" \
      "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

  # movement
    bind -T root M-j run "tmux previous-window"
    bind -T root M-k run "tmux next-window"

    bind -n C-Up    select-pane -U
    bind -n C-Left  select-pane -L
    bind -n C-Right select-pane -R
    bind -n C-Down  select-pane -D

    bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                     tmux select-pane -L"

    bind -n C-j run "($is_vim && tmux send-keys C-j) || \
                     ($is_fzf && tmux send-keys C-j) || \
                     tmux select-pane -D"

    bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                     ($is_fzf && tmux send-keys C-k) || \
                     tmux select-pane -U"

    bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                     tmux select-pane -R"

  # copying
    set-window-option -g mode-keys vi

    if-shell '[ $(echo "$(tmux -V | cut -d" " -f2 | sed "s/master/2.5/") >= 2.4" | bc) -eq 1 ]' \
     'bind-key -T copy-mode-vi "v"               send -X begin-selection; \
      bind-key -T copy-mode-vi "C-V"             send -X rectangle-toggle; \
      bind-key -T copy-mode-vi "y"               send -X copy-pipe-and-cancel "xclip -i -sel p -f | xclip -i -sel c "; \
      bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -sel c"'

    if-shell '[ $(echo "$(tmux -V | cut -d" " -f2 | sed "s/master/2.5/") < 2.4" | bc) -eq 1 ]' \
     'bind-key -t vi-copy "v"   begin-selection; \
      bind-key -t vi-copy "C-V" rectangle-toggle; \
      bind-key -t vi-copy "y"   copy-pipe "xclip -i -sel p -f | xclip -i -sel c "'


# """""""""""""""""""""""""""""""""""""""""""""""""""
# => Appearance
# """""""""""""""""""""""""""""""""""""""""""""""""""
    set -g window-size smallest

  # panes
    set -g pane-border-style        fg=blue
    set -g pane-active-border-style fg=green
    set -g pane-active-border-style bg=default

  # general status
    set -g default-terminal "screen-256color"
    set -g status          on
    set -g status-interval 5
    set -g status-bg       black
    set -g status-fg       white
    set -g status-left     ""
    set -g status-right    "#[fg=green]#H"

  # windows
    #set  -g window-style        'fg=colour250'
    #set  -g window-active-style 'fg=colour255'

    set  -g visual-activity  on
    setw -g monitor-activity off

    setw -g aggressive-resize on

    setw -g window-status-format \
      "#[fg=colour12]#[bg=colour0]#I #[bg=colour0]#[fg=colour15] #W "

    # turn red if zoomed
    setw -g window-status-current-format \
      "#[fg=colour12]#[bg=colour0]#I #[bg=colour15]#[fg=colour0,bold]#{?window_zoomed_flag,#[fg=red]#[bg=colour0],} #W#{?window_zoomed_flag,#[fg=red]#[bg=colour0],} "

  # status bar info
    set -g status-left-length  80
    set -g status-right-length 100
    set -g status-left         "#[fg=colour15]#S  "

    # set -g status-right-length 70
    set status-right \
'#[fg=colour15] #( whoami )@#( hostname -f ) \
#[fg=colour21]|#[fg=colour15] #( cpu-usage ) \
#[fg=colour21]|#[fg=colour15] #( disk-usage ) \
#[fg=colour21]|#[fg=colour15] #( date +"%b %d %I:%M %p" ) '
