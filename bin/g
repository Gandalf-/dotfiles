#!/usr/bin/env bash

set -e

[[ $1 ]] || { g --help; exit 1; }

while [[ $1 ]]; do
  case "$1" in
    # status
    s)  git status      ;;
    sf) git status -uno ;;
    bv) git branch -vv  ;;
    rv) git remote -vv  ;;

    # diffing
    d)  git diff --ws-error-highlight=all ;;
    dc) git diff --ws-error-highlight=all --cached ;;
    dh) git diff --ws-error-highlight=all HEAD~"${2:-1}" ;;

    # log
    l)  git log --color=always | awk '/commit/ { n++ } n > 4 { exit } /.*/ { print }' ;;
    lo) git log --oneline | cut -c 1-120 | head -n 10 ;;
    ll)
      fmt="%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset"
      git log --graph --pretty=format:"'$fmt'" --abbrev-commit
      ;;

    # committing
    c)  git commit                   ;;
    ca) git commit --amend           ;;
    cn) git commit --amend --no-edit ;;
    cm) git commit -m "${2:?g cm [message]}"; shift ;;

    # checkout
    a)  git add -A :/                                ;;
    rc) git rebase --continue                        ;;
    co) git checkout    "${2:?g co [object]}"; shift ;;
    cb) git checkout -b "${2:?g cb [branch]}"; shift ;;

    # updating
    f)  git fetch --all    ;;
    pl) git pull --no-edit ;;
    ph) git push           ;;
    pf) git push --force   ;;
    pu)
      branch="$( git rev-parse --abbrev-ref HEAD )"
      git push --set-upstream "${2:?g pu [remote]}" "$branch"
      shift
      ;;

    # other
    cc) git clean -nfd
        read -r -p "Continue? [y/N] " response
        [[ $response != "y" ]] && exit 0
        git clean -fd
        ;;

    '') exit 0 ;;

    *)
      echo "\
Status
    s  : status
    sf : status -uno
    bv : branch -vv
    rv : remote -vv
    d  : diff
    dc : diff --cached
    dh : diff HEAD~[number of commits]

Logging
    l  : log
    lo : log --oneline
    ll : log graph

Committing
    c  : commit
    ca : commit --amend
    cn : commit --amend --no-edit
    cm : commit -m [message]

Branching
    a  : add
    rc : rebase --continue
    co : checkout [branch]
    cb : checkout -b [branch]

Updating
    f  : fetch
    pl : pull --no-edit
    ph : push
    pf : push --force
    pu : push --set-upstream [remote]

Other
    cc : clean -nfd, confirm, clean -fd
    "
  esac

  shift
done
