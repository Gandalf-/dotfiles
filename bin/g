#!/usr/bin/env bash

set -e

root="$(dirname "${BASH_SOURCE[0]}")"/..
# shellcheck disable=SC1091
source "${root}/lib/common.sh"

[[ -z $1 ]] && { g --help; exit 1; }

export CONFIRM=0
export QUIET=1
export AUTO=1

while [[ $1 ]]; do
  case "$1" in
    # status
    s)  common::do "git status" ;;
    sf) common::do "git status -uno" ;;
    bv) common::do "git branch -vv" ;;
    rv) common::do "git remote -vv" ;;

    # log
    l)  common::do git log --color=always \| head -n 20 ;;
    lo) common::do git log --oneline \| cut -c 1-120 \| head -n 10 ;;
    ll)
      fmt="%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset"
      common::do git log --graph --pretty=format:"'$fmt'" --abbrev-commit
      ;;

    # committing
    c)  common::do "git commit" ;;
    ca) common::do "git commit --amend" ;;
    cn) common::do "git commit --amend --no-edit" ;;

    # checkout
    co) common::do "git checkout \"$2\""; shift ;;
    cb) common::do "git checkout -b \"${2:?g cb [branch]}\""; shift ;;

    # branching
    a)  common::do "git add -A :/" ;;
    f)  common::do "git fetch --all" ;;
    rc) common::do "git rebase --continue" ;;
    cm) common::do "git commit -m \"${2:?g cm [message]}\""; shift ;;

    # pulling
    pm) common::do "git pull \"${2%-}\""          ; shift ;;
    pl) common::do "git pull --no-edit \"${2%-}\""; shift ;;

    # pushing
    ph)  common::do "git push \"${2%.}\""; shift ;;
    pf)  common::do "git push --force \"${2%.}\""; shift ;;
    pu)
      branch="$( git rev-parse --abbrev-ref HEAD )"
      common::do "git push --set-upstream \"${2:?g pu [remote]}\" $branch"
      shift
      ;;

    # other
    cc) common::do "git clean -nfd"
        common::confirm "Continue?"
        common::do "git clean -fd"
        ;;

    # diffing
    d)  common::do git diff --ws-error-highlight=all ;;
    dc) common::do git diff --ws-error-highlight=all --cached ;;
    dh) common::do git diff --ws-error-highlight=all HEAD~"${2:-1}" ;;

    '')
      exit 0
      ;;

    *)
      echo "g --help
    # status
    s  : status
    sf : status -uno
    bv : branch -vv
    rv : remote -vv
    d  : diff
    dc : diff --cached
    dh : diff HEAD~[number of commits]

    # logging
    l  : log
    lo : log -oneline
    ll : log graph

    # committing
    c  : commit
    ca : commit --amend
    cn : commit --amend --no-edit

    # checkout
    co : checkout [branch]
    cb : checkout -b [branch]

    # branching
    a  : add
    f  : fetch
    rc : rebase --continue
    cm : commit -m [message]

    # pulling
    pm : pull [remote]
    pl : pull --no-edit [remote]

    # pushing
    ph : push [remote]
    pf : push --force [remote]
    pu : push --set-upstream [remote]

    # other
    cc : clean -nfd, confirm, clean -fd
    "
  esac

  shift
done
